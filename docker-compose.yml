version: '3.8'

services:
  kafka-admin:
    container_name: kafka-admin
    image: kafka-admin
    build:
      dockerfile: ./kafka-admin/Dockerfile
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_BROKERCONNECT: localhost:9092
    networks:
      - kafka_network

  kafka-producer:
    container_name: kafka-producer
    image: kafka-producer
    build:
      dockerfile: ./kafka-producer/Dockerfile
    depends_on:
      - zookeeper
      - kafka
      - kafka-admin
    ports:
      - 8081:8081
    environment:
      KAFKA_BROKERCONNECT: localhost:9092
#      - SPRING_KAFKA_BOOTSTRAP_SERVERS=localhost:9092
    networks:
      - kafka_network

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    ports:
      - 2181:2181
    networks:
      - kafka_network

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:latest
    ports:
      - 9092:9092
    expose:
      - 9093
    depends_on:
      - zookeeper
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

    networks:
      - kafka_network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - 9999:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - zookeeper
      - kafka
    networks:
      - kafka_network

networks:
  kafka_network:
    name: kafka_network_demo