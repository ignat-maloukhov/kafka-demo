version: '2'

services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - kafka-demo
    restart: always

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 32181:2181
    networks:
      - kafka-demo
    restart: always

  kafka-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181

      #KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092
      #KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:29092,EXTERNAL://localhost:9092
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      #KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - kafka-demo
    restart: always

####
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      #KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
    ports:
      - 39092:39092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181

      #KAFKA_LISTENERS: INTERNAL://:39092,EXTERNAL://:9092
      #KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:39092,EXTERNAL://localhost:9092
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      #KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - kafka-demo
    restart: always

###
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      #KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 9999:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:29092,kafka-2:39092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - zookeeper-1
      - zookeeper-2
      - kafka-1
      - kafka-2
    networks:
        - kafka-demo
    restart: always

  kafka-admin:
    build:
      dockerfile: ./kafka-admin/Dockerfile
    image: kafka-admin
    depends_on:
     - kafka-1
     - kafka-2
#    environment:
#      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka-1:29092,kafka-2:39092
    ports:
      - 9099:8099
    container_name: kafka-admin
    networks:
      - kafka-demo
    restart: always


networks:
  kafka-demo:
    driver: bridge
#    external: true

#  kafka-producer:
#    build:
#      dockerfile: ./kafka-producer/Dockerfile
#    image: kafka-producer
#    depends_on:
#      - kafka-admin
#    ports:
#      - 9090:8090
#    container_name: kafka-producer
#  kafka-consumer:
#    build:
#      dockerfile: ./kafka-consumer/Dockerfile
#    image: kafka-consumer
#    ports:
#      - 9091:8091
#    container_name: kafka-consumer

